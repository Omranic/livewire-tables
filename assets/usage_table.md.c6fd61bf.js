import{_ as s,o as a,c as e,S as n}from"./chunks/framework.bb4748ce.js";const F=JSON.parse('{"title":"Table","description":"","frontmatter":{},"headers":[],"relativePath":"usage/table.md","filePath":"usage/table.md"}'),l={name:"usage/table.md"},o=n(`<h1 id="table" tabindex="-1">Table <a class="header-anchor" href="#table" aria-label="Permalink to &quot;Table&quot;">â€‹</a></h1><p>In order to create your first table, you will have to extend the <code>LivewireTable</code> component. Via the <code>$model</code> variable you can specify what model should be used.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;?</span><span style="color:#A6ACCD;">php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">App</span><span style="color:#89DDFF;">\\</span><span style="color:#FFCB6B;">Livewire</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">RamonRietdijk</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">LivewireTables</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Livewire</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">LivewireTable</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BlogTable</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LivewireTable</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">model </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Blog</span><span style="color:#89DDFF;">::</span><span style="color:#F78C6C;">class</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>If you have manually created the file, Livewire may not yet know about this component. This can be fixed by running <code>livewire:discover</code>.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">php</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">artisan</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">livewire:discover</span></span></code></pre></div><p>Depending on how you have named your table, you should be able to see it now.</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">livewire:blog-table</span><span style="color:#89DDFF;">/&gt;</span></span></code></pre></div><p>It works! But an empty table is a bit silly, right? Let&#39;s create some columns!</p>`,8),p=[o];function t(c,r,i,y,C,d){return a(),e("div",null,p)}const h=s(l,[["render",t]]);export{F as __pageData,h as default};
